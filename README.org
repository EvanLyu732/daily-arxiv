#+attr_html: :width 60px
#+attr_latex: :width 60px

* gpt-daily-arxiv

[[./static/logo.png]]


**  Description

gpt-daily-arxiv is a program that fetches papers using arxiv rss feeds and utilizes gpt to summarize the papers.

**  State Diagram

#+begin_src  txt
+---------------------+
| Arxiv RSS Feed      |
+---------------------+
          |
          v
+---------------------+
| Retrieve PDF        |
| from RSS Feed       |
+---------------------+
          |
          v
+---------------------+
| Convert PDF to Text |
+---------------------+
          |
          v
+---------------------+
| Ask GPT to Summarize|
| the Paper           |
+---------------------+
          |
          v
+---------------------+
| Write Data Record   |
| in MongoDB          |
+---------------------+
#+end_src

** Usage

Ensure `OPENAPI_API_KEY` is setted. And if you are behind a proxy set environment variable `OPENAI_PROXY_URL` to your proxy server. Checkout this [[https://stackoverflow.com/questions/77606417/openai-api-request-with-proxy][link]]:

*** To update RSS feeds
modify main.py below codes

#+begin_src  python

arxiv_url_dict = {
    "Computer Vision": "https://arxiv.org/rss/cs.CV",
    "Computer Sicence": "https://arxiv.org/rss/cs",
    "Artificial Intelligence": "https://arxiv.org/rss/cs.AI",
    "Robotics": "https://arxiv.org/rss/cs.RO",
    "Software Engineering": "https://rss.arxiv.org/rss/cs.SE",
}
#+end_src


*** To run the project

Papers are download under 'db' folder

#+begin_src bash
pip install -r requirements.txt
python3 main.py

# Also make sure mongodb is installed
#+end_src

** Visualization

Since paper notes are stored in mongodb. I recommend using [[https://github.com/arunbandari/mongo-gui][mongo-gui]] for visualization. 

** TODO
 - [ ] dockerize this project
 - [ ] build frontend
 - [ ] support customize LLM 
